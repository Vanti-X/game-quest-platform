version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: quest-platform-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-quest_platform}
      PGDATA: /data/postgres
    volumes:
      - postgres-data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - quest-platform-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: quest-platform-frontend
    restart: unless-stopped
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    networks:
      - quest-platform-network
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - backend

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: quest-platform-backend
    restart: unless-stopped
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    networks:
      - quest-platform-network
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-quest_platform}
      - JWT_SECRET=${JWT_SECRET:-super-secret-jwt-key-change-in-production}
      - STEAM_API_KEY=${STEAM_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4
    container_name: quest-platform-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - quest-platform-network
    depends_on:
      - postgres

networks:
  quest-platform-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data: